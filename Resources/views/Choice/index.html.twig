{% extends "KyelaBundle::layout.html.twig" %}

{% block body -%}
    <div class="jumbotron">
        <div class="container">
            <h1>{% trans %}choice.list{% endtrans %}</h1>
        </div>
    </div>

<div class="table-responsive">
    <table class="table table-striped table-hover table-bordered">
        <thead>
            <tr>
                <th>{% trans %}name{% endtrans %}</th>
                <th>{% trans %}value{% endtrans %}</th>
                <th>{% trans %}color{% endtrans %}</th>
                <th>{% trans %}Icon{% endtrans %}</th>
                <th>{% trans %}action{% endtrans %}</th>
            </tr>
        </thead>
        <tbody>
        {% for choice in choices %}
            <tr id="choice_{{ choice.id }}">
                <td><span class="glyphicon glyphicon-move pull-left"></span>{{ choice.name }}</td>
                <td>{{ choice.value }}</td>
                <td><button type="button" class="btn choice-{{ choice.color }}">{{ choice.color|trans }}</button></td>
                <td><span class="glyphicon glyphicon-{{ choice.icon }}"></span></td>
                <td>
                    <a class="btn btn-warning" role="button" href="{{ path('choice_edit', { 'pollUrl': poll.url, 'id': choice.id }) }}">
                        <span class="glyphicon glyphicon-edit"></span>
                        {% trans %}edit{% endtrans %}
                    </a>
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
</div>

<p>
    <a class="btn btn-primary btn-lg" role="button" href="{{ path('choice_new', {'pollUrl': poll.url}) }}">
    	<span class="glyphicon glyphicon-plus"></span>
    	{% trans %}add.an.option{% endtrans %}
    </a>
    <a class="btn btn-default btn-lg" role="button" href="{{ path('poll_show', {'pollUrl': poll.url}) }}">
    	<span class="glyphicon glyphicon-step-backward"></span>
    	{% trans %}back{% endtrans %}
    </a>
</p>

<script>
    // Thanks to http://www.miximum.fr/creer-une-liste-triable-avec-symfony-et-jquery-ui.html
    $(function() {
        $("table tbody").sortable({
            // limitons les déplacements sur l'axe des ordonnées, ce sera plus propre
            axis: 'y',

            // Il faut cliquer sur cet élément pour pouvoir initier le drag'n'drop
            handle: 'td',

            // Créons un joli trou stylé lors des déplacements
            placeholder: 'ui-state-highlight',
            forcePlaceholderSize: true,

            // Cette fonction permet à notre ligne de conserver son formatage lors du déplacement
            // Pas vraiment utile, mais plus agréable à l'œil
            helper: function(e, tr)
            {
              var $originals = tr.children();
              var $helper = tr.clone();
              $helper.children().each(function(index)
              {
                // Set helper cell sizes to match the original sizes
                $(this).width($originals.eq(index).width())
              });
              return $helper;
            },

            // La fonction appelée quand un élément change de position
            // C'est le code vraiment utile, en fait
            update: function(event, ui){
              // Construit un tableau des ids des stories
              serial = $(this).sortable('serialize');

              // Appelle une action en ajax
              $.post('{{ path('choice_order', {'pollUrl': poll.url})|e('js') }}', serial,
                function(response) {
                  if (response.code != 100) {
                      alert('Failed to save order')
                  };
                }
              );
            }
        });
    });
</script>

{% endblock %}
